{
  "$schema": "./schema/m3-tech.schema.json",
  "techs" :[
    {
      "name": "canIBJ",
      "requires": [
        "Morph",
        "Bombs"
      ],
      "note": "Infinite Bomb Jump. Using consecutive bomb jumps to gain height indefinitely."
    },
    {
      "name": "canBombAboveIBJ",
      "requires": ["canIBJ"],
      "note": "The ability to break blocks above Samus while maintaining an ongoing IBJ."
    },
    {
      "name": "canSandIBJ",
      "requires": ["canIBJ"],
      "note": "The ability to start an IBJ off a jump on sand. Pretty obnoxious. If we add a midair IBJ tech, this should require it."
    },
    {
      "name": "canShinespark",
      "requires": [ "SpeedBooster" ],
      "note": "The ability to use the Speed Booster to store a charge, then fly in a direction until an obstacle is hit."
    },
    {
      "name": "canUseSpeedEchoes",
      "requires": [ "canShinespark" ],
      "note": "Using as a weapon the Samus echoes that are emitted after a shinespark bonk."
    },
    {
      "name": "canBlueSpaceJump",
      "requires": [
        "SpeedBooster",
        "SpaceJump"
      ],
      "note": "Using SpaceJump to carry SpeedBooster's blue suit into some speed blocks that couldn't be reached just by running and jumping"
    },
    {
      "name": "canTrickyJump",
      "requires": [],
      "note": "Executing a jump that requires very precise timing"
    },
    {
      "name": "canTrickyDashJump",
      "requires": [
        "canTrickyJump",
        "SpeedBooster"
      ],
      "note": "Jumping during a spike in the speed-to-jumpHeight chart (when Speed Booster is active) to achieve a higher jump height than if done with all the available running room"
    },
    {
      "name": "canWalljump",
      "requires": [],
      "note": "Jump off walls, as taught by the Etecoons"
    },
    {
      "name": "canManipulateHitbox",
      "requires": [],
      "note": "Taking advantage of the smaller hitbox of spinjump and down-aim to squeeze through two-tile gaps."
    },
    {
      "name": "canUseEnemies",
      "requires": [],
      "note": "Using an enemy in a room to accomplish something that couldn't be done if it weren't there"
    },
    {
      "name": "canSuitlessLavaWalljump",
      "requires": [ "canSuitlessLavaDive" ],
      "note": "Performing walljumps in lava while suitless"
    },
    {
      "name": "canFastWalljumpClimb",
      "requires": [
        "canWalljump"
      ],
      "note": "Climbing a wall with consecutive walljumps very quickly, e.g. for setting up a full halfie."
    },
    {
      "name": "canPreciseWalljump",
      "requires": [
        "canWalljump",
        "canTrickyJump"
      ],
      "note": "A walljump that needs to be performed at a fairly precise spot in order to yield the desired result."
    },
    {
      "name": "canDelayedWalljump",
      "requires": ["canPreciseWalljump"],
      "note": "A precise walljump that additionally needs to done as far from the wall as possible."
    },
    {
      "name": "canIframeSpikeWalljump",
      "requires": ["canWalljump"],
      "note": "Using Iframes to perform a walljump off a spike wall"
    },
    {
      "name": "canInsaneWalljump",
      "requires": [ "canDelayedWalljump" ],
      "note": "For delayed walljumps that require extreme precision, in the vicinity of pixel+frame perfect."
    },
    {
      "name": "canFlatleyTurnaroundJump",
      "requires": [],
      "note": "Positioning Samus at the very edge of a platform, facing away, then turning around and jumping to initiate the jump from a position that is off the platform (and slightly below it)"
    },
    {
      "name": "canStationarySpinJump",
      "requires": [],
      "note": "Quickly press and release forward and then immediately press jump (after stopping) to spin jump with no horizontal movement."
    },
    {
      "name": "canMoonfall",
      "requires": [],
      "note": "Jumping off a ledge while moonwalking to fall with an uncapped speed"
    },
    {
      "name": "canCrystalFlash",
      "requires": [
        {"ammo": {
          "type": "Missile",
          "count": 10
        }},
        {"ammo": {
          "type": "Super",
          "count": 10
        }},
        {"ammo": {
          "type": "PowerBomb",
          "count": 11
        }},
        "Morph",
        "Missile",
        "Super",
        "PowerBomb"
      ],
      "note": "Performing a Crystal Flash."
    },
    {
      "name": "canCrystalFlashForceStandup",
      "requires": ["canCrystalFlash"],
      "note": "Using a Crystal Flash to take advantage of the fact it forces Samus to stand up."
    },
    {
      "name": "canHitbox",
      "requires": [],
      "note": "The ability to pass through some enemies (Metal Pirates) undamaged by shooting."
    },
    {
      "name": "canPlasmaHitbox",
      "requires": [ "Plasma" ],
      "note": "The ability to pass through some enemies (Kihunters) undamaged by shooting Plasma."
    },
    {
      "name": "canDamageBoost",
      "requires": [ "canUseEnemies"],
      "note": "Taking damage from an enemy to assist Samus in her movement"
    },
    {
      "name": "canContinuousDboost",
      "requires": [ "canDamageBoost" ],
      "note": "A tech that involves multiple damage boosts with precise timing. No room for missing one of them."
    },
    {
      "name": "canUnmorphBombBoost",
      "requires": ["h_canBombThings"],
      "note": "A tech that involves mid-air morphing to drop a Morph Bomb or PB, then mid-air unmorphing to briefly hover above the bomb, then using the bomb blast to go just a bit higher than max jump height"
    },
    {
      "name": "canGateGlitch",
      "requires": [
        {"or": [
          {"and": [
            "Missile",
            {"ammo": {
              "type": "Missile",
              "count": 1
            }}
          ]},
          "h_canOpenGreenDoors"
        ]}
      ],
      "note": [
        "The ability to open a left-facing blue gate using missiles or supers. It's recommended to apply a number of tries as leniency here.",
        "If this tech is turned off, it's strongly recommended to turn off canHeatedGateGlitch at the same time."
      ]
    },
    {
      "name": "canHeatedGateGlitch",
      "requires": [
        "h_canNavigateHeatRooms",
        {"heatFrames": 60},
        {"or": [
          {"and": [
            "Missile",
            {"ammo": {
              "type": "Missile",
              "count": 1
            }}
          ]},
          "h_canOpenGreenDoors"
        ]}
      ],
      "note": [
        "Separate from canGateGlitch to simplify the cost per attempt.",
        "If this tech is turned off, it's strongly recommended to turn off canGateGlitch at the same time.",
        "This will be naturally impossible without Varia if canHeatRun is turned off."
      ]
    },
    {
      "name": "canReverseGateGlitch",
      "requires": [],
      "note": [
        "A general tech for opening right-facing gates from the left.",
        "Individual strats may differ, so requirements are left for individual strats to define."
      ]
    },
    {
      "name": "canGGG",
      "requires": [
        "h_canOpenGreenDoors"
      ],
      "note": [
        "The ability to open a left facing green gate using supers. It's recommended to apply a number of tries as leniency here.",
        "If this tech is turned off, it's strongly recommended to turn off canHeatedGGG at the same time."
      ]
    },
    {
      "name": "canHeatedGGG",
      "requires": [
        "h_canNavigateHeatRooms",
        "h_canOpenGreenDoors",
        {"heatFrames": 60}
      ],
      "note": [
        "Separate from canGGG to simplify the cost per attempt.",
        "If this tech is turned off, it's strongly recommended to turn off canGGG at the same time.",
        "This will be naturally impossible without Varia if canHeatRun is turned off."
      ]
    },
    {
      "name": "canGravityJump",
      "requires": [ "Gravity" ],
      "note": "Turning off Gravity Suit right after the start of an underwater jump to achieve higher height"
    },
    {
      "name": "canLavaGravityJump",
      "requires": [ "canGravityJump" ],
      "note": "Doing a gravity Jump in lava, causing Samus to take damage"
    },
    {
      "name": "canGravityWalljump",
      "requires": [
        "canGravityJump",
        "canWalljump"
      ],
      "note": "Executing a gravity jump off a walljump"
    },
    {
      "name": "canIframeSpikeJump",
      "requires": [],
      "note": "Using i-frames to setup a jump from a spike floor. The i-frames are typically obtained by getting damaged by said spike floor"
    },
    {
      "name": "canMachball",
      "requires": [ "Morph" ],
      "note": "Alias for canMockball"
    },
    {
      "name": "can2HighWallMidAirMorph",
      "requires": [
        "canWalljump",
        "Morph"
      ],
      "note" : "Getting up a 2-tile-high jump in a morph passage by mid-air morphing off the opposite wall"
    },
    {
      "name": "can3HighMidAirMorph",
      "requires": [
        "Morph"
      ],
      "note" : "A mid-air morph that has to be done within an elevation difference of 3 tiles (with a ceiling removing any extra room). It's a lot more precise than with more room."
    },
    {
      "name": "canTurnaroundAimCancel",
      "requires": [],
      "note" : "Canceling an aim angle while crouching and turning around, to wiggle to the right"
    },
    {
      "name": "canMockball",
      "requires": [ "Morph" ],
      "note": "Alias for canMachball"
    },
    {
      "name": "canMidAirMockball",
      "requires": [ "Morph" ],
      "note": "Performing the same input as a mockball, but in midair, in order to maintain forward momentum while morphing in midair"
    },
    {
      "name": "canStationaryMidAirMockball",
      "requires": ["canMidAirMockball"],
      "note": [
        "While performing a stationary vertical jump, it's possible to mid-air morph in a manner similar to a mid-air mockball.",
        "Doing this immediately gives lateral momentum equivalent to maximum walk speed.",
        "This is meaningless under normal physics, but has underwater applications."
      ]
    },
    {
      "name": "canSpringBallJump",
      "requires": [
        "canMidAirMockball",
        "SpringBall"
      ],
      "note": "Using a mid-air mockball to bounce off a surface with SpringBall while retaining previous momentum."
    },
    {
      "name": "canHeatRun",
      "requires": [],
      "note": "Navigating heat rooms without immunity to heat damage."
    },
    {
      "name": "canSuitlessMaridia",
      "requires": [],
      "note": [
        "Navigating Maridia without Gravity.",
        "This is not required for simple underwater platforming where missing a jump does not leave the player stuck somewhere, or for falling down a submerged room."
      ]
    },
    {
      "name": "canSuitlessLavaDive",
      "requires": [],
      "note": "Navigating deep lava without Gravity. This isn't limited to the Lava Dive Room, but it does exclude all rooms with just shallow lava."
    },
    {
      "name": "canUseFrozenEnemies",
      "requires": [ "Ice", "canUseEnemies" ],
      "note": "Can use Ice Beam to freeze enemies to use as platforms, or as walljump supports, to reach higher areas"
    },
    {
      "name": "canTrickyUseFrozenEnemies",
      "requires": [ "canUseFrozenEnemies" ],
      "note": "Can use Ice Beam to freeze enemies in especially precise positionings."
    },
    {
      "name": "canCrabClimb",
      "requires": [ "canTrickyUseFrozenEnemies" ],
      "note": "Repeatedly freezing a crab to climb up a wall, using no other support. This does not include the simple act of using a frozen crab as a stepping stone, even on a wall or in midair."
    },
    {
      "name": "canCeilingClip",
      "requires": [],
      "note": "Basic variant of jumping into a two block high space and performing the actions needed to clip up through the ceiling."
    },
    {
      "name": "canPixelPerfectIceClip",
      "requires": [
        "canCeilingClip",
        "canTrickyUseFrozenEnemies"
      ],
      "note": "Setting up an ice clip at exactly the right pixel, so the clip can work without the leniency allowed by an X-Ray standup"
    },
    {
      "name": "canNonTrivialIceClip",
      "requires": [
        "canCeilingClip",
        "canTrickyUseFrozenEnemies",
        {"or":[
          "canPixelPerfectIceClip",
          "canXRayStandUp"
        ]}
      ],
      "note": "A tech common to all ice clips except Mochtroid (which lines up perfectly so is pretty trivial). It requires either pixel perfect enemy positioning or the ability to force a standup with XRay."
    },
    {
      "name": "canWallIceClip",
      "requires": [
        "canTrickyUseFrozenEnemies",
        "Wave"
      ],
      "note": "Using spawner bugs to gradually clip through a wall by leaning on frozen enemies."
    },
    {
      "name": "canBeetomClip",
      "requires": [ "canNonTrivialIceClip" ],
      "note": "Using a frozen Beetom to perform a ceiling clip"
    },
    {
      "name": "canWallCrawlerClip",
      "requires": [ "canNonTrivialIceClip" ],
      "note": "Using a frozen wall crawling enemy (such as a Zeela or Geemer) to perform a ceiling clip"
    },
    {
      "name": "canMetroidAvoid",
      "requires": [],
      "note": "Being proficient at avoiding Metroids"
    },
    {
      "name": "canBabyMetroidAvoid",
      "requires": [],
      "note": "Being proficient at avoiding the baby Metroid"
    },
    {
      "name": "canMochtroidClip",
      "requires": [
        "canCeilingClip",
        "canUseFrozenEnemies"
      ],
      "note": "Using a frozen Mochtroid to clip through a one-tile-high wall."
    },
    {
      "name": "canPuyoClip",
      "requires": [
        "canNonTrivialIceClip"
      ],
      "note": "Using a frozen Puyo to clip through a one-tile-high wall."
    },
    {
      "name": "canMultiviolaClip",
      "requires": [
        "canNonTrivialIceClip"
      ],
      "note": "Using a frozen Multiviola to clip through a one-tile-high wall."
    },
    {
      "name": "canMochtroidClimb",
      "requires": [
        "canUseFrozenEnemies"
      ],
      "note": "Using a Mochtroid's movement to climb upwards by continually freezing it higher up"
    },
    {
      "name": "canSandMochtroidClimb",
      "requires": [
        "canMochtroidClimb"
      ],
      "note": "Setting up a Mochtroid climb from a sand floor, where failure in a suitless environment can mean death"
    },
    {
      "name": "canShotBlockOverload",
      "requires": [ "Wave" ],
      "note": "Shooting a large number of off-screen shot blocks, overloading the memory and making it possible to clip through otherwise solid blocks. Only known application is Frog Speedway."
    },
    {
      "name": "canSunkenDualWallClimb",
      "requires": [
        "canSuitlessMaridia",
        "HiJump"
      ],
      "note": "Using a series of rapid, consecutive wall jumps underwater, on two nearby walls, to climb upwards."
    },
    {
      "name": "canBreakFree",
      "requires": [
        "canSunkenDualWallClimb"
      ],
      "note": "Managing to break free of the water while doing a sunken dual wall climb, without the help of space jump"
    },
    {
      "name": "canMaridiaTubeClip",
      "requires": [ "Morph" ],
      "note": "Clipping into the Maridia tube from above by unmorphing."
    },
    {
      "name": "canHerdBabyTurtles",
      "requires": [],
      "note": "This maneuver involves manipulating baby turtle movement to group them together in a corner, to clear the rest of the surface to charge a shinespark. Much easier with morph."
    },
    {
      "name": "canQuickLowTideWalljumpWaterEscape",
      "requires": [
         "canSuitlessMaridia",
         "canWalljump"
        ],
      "note": "The ability to get out of water by walljumping while the water is at its lowest point, and to do so in a timely manner, e.g. before a Yapping Maw drags you into a sand pit."
    },
    {
      "name": "canTunnelCrawl",
      "requires": ["Morph"],
      "note": [
        "Moving along a 2-tile-high passage while standing up by repeatedly spin-jumping and then pressing down.",
        "The tech somes with softlock risks without Morph Ball, but this is the safer variant where Morph is available and no softlock can occur."
      ]
    },
    {
      "name": "canMorphlessTunnelCrawl",
      "requires": [],
      "note": "Moving along a 2-tile-high passage while standing up by repeatedly spin-jumping and then pressing down. Comes with softlock risks without Morph Ball."
    },
    {
      "name": "canCWJ",
      "requires": [ "canTrickyJump" ],
      "note": [
        "Continuous Walljump. Doing a precise forward jump that causes Samus to move back down right after the top of a wall while retaining her momentum.",
        "This leads to a tiny window where a walljump can be performed, still with the original momentum."
      ]
    },
    {
      "name": "canGrappleJump",
      "requires": [
        "Grapple",
        "Morph"
      ],
      "note": "Using grapple to propel yourself upwards, then continuously morphing/unmorphing/jumping in midair to climb upwards"
    },
    {
      "name": "canDraygonGrappleJump",
      "requires": [
        "canGrappleJump",
        "HiJump"
      ],
      "note": "Using grapple jump off a Draygon turret. FIXME does it actually require HiJump?"
    },
    {
      "name": "canGrappleClip",
      "requires": [
        "Grapple",
        "canUseEnemies"
      ],
      "note": "Using Grapple on an enemy to clip into a wall"
    },
    {
      "name": "canSingleHBJ",
      "requires": ["h_canBombThings"],
      "note": "A horizontal bomb jump using a single bomb. Since it uses one bomb, it works with PBs as well."
    },
    {
      "name": "canDoubleHBJ",
      "requires": [
        "h_canUseMorphBombs",
        "canSingleHBJ"
      ],
      "note": "A horizontal bomb jump using two bombs. Longer range than single HBJ, much harder to execute, doesn't work with PBs."
    },
    {
      "name": "canSnailClip",
      "requires": [
        "canCeilingClip",
        "Gravity"
      ],
      "note": [
        "Manipulating a snail's position to setup a ceiling clip.",
        "Currently requires Gravity because all known applications are underwater, but maybe there should be a helper for that instead?"
      ]
    },
    {
      "name": "canManipulateMellas",
      "requires": [],
      "note": [
        "The ability to identify a bug enemy that moves in a diving pattern (Mellow, Mella, or Menu) and inches upwards or downwards with each dive.",
        "Once that enemy has been identified, subsequently making it dive repeatedly until it is at the proper height to execute a strat."
      ]
    },
    {
      "name": "canSnailClimb",
      "requires": [],
      "note": "Piggybacking on top of a climbing snail to get up a wall"
    },
    {
      "name": "canBombJumpBreakFree",
      "requires": ["h_canPassBombPassages"],
      "note": [
        "From a submerged platform, setting up a single bomb jump above the water line to propel Samus up and out of the water.",
        "It's recommended to apply a number of tries as leniency here for the PBs version."
      ]
    },
    {
      "name": "canSuperReachAround",
      "requires": [ 
        "Super",
        {"ammo": {
          "type": "Super",
          "count": 1
        }}
      ],
      "note": [
        "The ability to shoot a Super Missile at a precise location to hit an offscreen inanimate target, e.g. a Super block.",
        "It's recommended to apply a number of tries as leniency here."
      ]
    },
    {
      "name": "canWrapAroundShot",
      "requires": [
        "Wave",
        "Charge"
      ],
      "note": "The ability to reach targets on the other side of a room by shooting Wave Beam at the right spot in the opposite wall."
    },
    {
      "name": "canSpringBallJumpMidAir",
      "requires": [
        "Morph",
        "SpringBall"
      ],
      "note": [
        "Reaching a higher than normal height with a jump, by morphing in mid-air and then turning on SpringBall while still climbing upwards.",
        "This makes it possible to use SpringBall while Samus is still climbing upwards, for an additional jump."
      ]
    },
    {
      "name": "canSpringwall",
      "requires": [
        "canSpringBallJumpMidAir",
        "canWalljump"
      ],
      "note": [
        "A springball jump that starts with a walljump to gain more height.",
        "It often relies on the momentum change when equipping or unequipping SpringBall while morphed and moving horizontally."
      ]
    },
    {
      "name": "canGTCode",
      "requires": []
    },
    {
      "name": "canSpaceTime",
      "requires": [ "canGTCode" ]
    },
    {
      "name": "canXRayStandUp",
      "requires": [ 
        "XRayScope"
      ],
      "note": "Force Samus to stand up, from a crouching position, by canceling use of the XRay Scope while turning around"
    },
    {
      "name": "canXRayClimb",
      "requires": [ 
        "canXRayStandUp"
      ],
      "note": [
        "All-purpose tech for X-Ray climbing by repeatedly using X-Ray's forced standup trick to climb up through walls.",
        "This tech is uncoupled from different setups that place Samus in a position to do this."
      ]
    },
    {
      "name": "canRightFacingDoorXRayClimb",
      "requires": [ 
        "canXRayClimb",
        "canStationarySpinJump"
      ],
      "note": ["Enter the partner door (which faces left in the adjacent room) with a stationary spinjump moving away to touch the transition with momentum that will get you stuck in the destination door.",
        "That destination door is right-facing in the room where the X-Ray climb happens.",
        "Then use the X-Ray's forced standup trick to climb up through in-bound walls."
      ]
    },
    {
      "name": "canXRayClimbOOB",
      "requires": [ "canXRayClimb" ],
      "note":  "Using X-Ray climb tech to enter a tile not recognized by the game map."
    },
    {
      "name": "canQuickCrumbleEscape",
      "requires": [],
      "note":"The combination of a crumble quick drop, and landing on a lower surface and jumping back over the crumble block before it re-forms."
    },
    {
      "name": "canCrumbleJump",
      "requires": [],
      "note": "The ability to reliably jump while landing on a crumble block. This may employ the small amount of jump buffering the game offers."
    },
    {
      "name": "canCrumbleSpinJump",
      "requires": [ "canCrumbleJump" ],
      "note": "The ability to reliably spin jump while landing on a crumble block. This is much tighter than regular crumble jumps because the jump buffering does not help."
    },
    {
      "name": "canIceZebetitesSkip",
      "requires": [ 
        "canUseFrozenEnemies",
        {"enemyDamage": {
          "enemy": "Rinka",
          "type": "contact",
          "hits": 1
        }}
       ],
      "note":"Being able to glitch through the Mother Brain zebetites by using a frozen Rinka and iFrames."
    },
    {
      "name": "canSpeedZebetitesSkip",
      "requires": [ 
        "SpeedBooster",
        {"enemyDamage": {
          "enemy": "Rinka",
          "type": "contact",
          "hits": 1
        }}
       ],
      "note":"Being able to glitch through the Mother Brain zebetites by using a shinespark and iFrames."
    },
    {
      "name": "canRemorphZebetiteSkip",
      "requires": [
        "canUseFrozenEnemies",
        "Wave",
        "Morph"
      ],
      "note": "Being able to glitch through the second Zebetite barrier, clipping through it by morphing/unmorphing/remorphing on a frozen Rinka."
    },
    {
      "name": "canBePatient",
      "requires": [],
      "note":"Executing a strat that requires waiting or doing the same thing over and over again for over 3 minutes, even with good execution"
    }
  ]
}