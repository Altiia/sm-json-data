{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "id": "https://raw.githubusercontent.com/miketrethewey/sm-json-data/master/schema/m3-region.schema.json",
  "type": "object",
  "title": "Super Metroid Room Schema",
  "properties": {
    "rooms": {
      "type": "array",
      "items": {
        "$id": "#/items",
        "type": "object",
        "title": "Room Object",
        "description": "Room Object",
        "required": [
          "id",
          "name",
          "area",
          "subarea",
          "nodes",
          "links"
        ],
        "properties": {
          "id": {
            "$id": "#/items/properties/id",
            "type": "integer",
            "title": "Room ID",
            "description": "Identifier for this room, unique across the entire game",
            "default": 0,
            "examples": [
              7
            ]
          },
          "name": {
            "$id": "#/items/properties/name",
            "type": "string",
            "title": "Room Name",
            "description": "As it appears in the SuperMetroid.run wiki",
            "default": "",
            "examples": [
              "Morphing Ball Room"
            ],
            "pattern": "^(.*)$"
          },
          "area": {
            "$id": "#/items/properties/area",
            "type": "string",
            "title": "Area Name",
            "default": "",
            "examples": [
              "Brinstar"
            ],
            "pattern": "^(.*)$"
          },
          "subarea": {
            "$id": "#/items/properties/subarea",
            "type": "string",
            "title": "Area Subname",
            "default": "",
            "examples": [
              "Blue"
            ],
            "pattern": "^(.*)$"
          },
          "note": {
            "$id": "#/items/properties/note",
            "type": "string",
            "title": "Note field",
            "default": "",
            "pattern": "^(.*)$"
          },
          "nodes": {
            "$id": "#/items/properties/nodes",
            "type": "array",
            "title": "Nodes; Doors, Elevators, Item Locations, etc",
            "items": {
              "$id": "#/items/properties/nodes/items",
              "type": "object",
              "title": "Node Object",
              "required": [
                "id",
                "name",
                "nodeType",
                "nodeSubType",
                "locks"
              ],
              "properties": {
                "id": {
                  "$id": "#/items/properties/nodes/items/properties/id",
                  "type": "integer",
                  "title": "Node ID within Room",
                  "default": 0,
                  "examples": [
                    1
                  ]
                },
                "name": {
                  "$id": "#/items/properties/nodes/items/properties/name",
                  "type": "string",
                  "title": "Node Name",
                  "default": "",
                  "examples": [
                    "Left Door"
                  ],
                  "pattern": "^(.*)$"
                },
                "nodeType": {
                  "$id": "#/items/properties/nodes/items/properties/nodeType",
                  "type": "string",
                  "title": "Node Type",
                  "description": "Examples: door, elevator, event, eye, gray, green, item, vertical",
                  "default": "",
                  "examples": [
                    "door",
                    "entrance",
                    "exit",
                    "event",
                    "item"
                  ],
                  "enum": [
                    "door",
                    "entrance",
                    "exit",
                    "event",
                    "item",
                    "junction"
                  ],
                  "pattern": "^(.*)$"
                },
                "nodeSubType": {
                  "$id": "#/items/properties/nodes/items/properties/nodeSubType",
                  "type": "string",
                  "title": "Node SubType",
                  "default": "",
                  "examples": [
                    "boss",
                    "chozo",
                    "hidden",
                    "visible"
                  ],
                  "enum": [
                    "boss",
                    "chozo",
                    "flag",
                    "hidden",
                    "visible",

                    "blue",
                    "doorway",
                    "elevator",
                    "eye",
                    "gray",
                    "green",
                    "grey",
                    "one-way",
                    "passage",
                    "red",
                    "sandpit",
                    "vertical",
                    "yellow",

                    "junction",

                    "chest",
                    "dash",
                    "dig",
                    "standing",
                    "tablet"
                  ],
                  "pattern": "^(.*)$"
                },
                "nodeItem": {
                  "$id": "#/items/properties/nodes/items/properties/nodeItem",
                  "type": "string",
                  "title": "Vanilla Item",
                  "description": "Item that normally resides at this node in Vanilla"
                },
                "nodeAddress": {
                  "$id": "#/items/properties/nodes/items/properties/nodeAddress",
                  "type": "string",
                  "title": "Memory Address",
                  "description": "Memory address of this location"
                },
                "requires": {
                  "$id": "#/items/properties/nodes/items/properties/requires",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "Node Requirements",
                  "description": "Equipment, tech, and flag requirements to reach this node within Room",
                  "items": {
                    "$id": "#/items/properties/nodes/items/properties/requires/items",
                    "type": [
                      "object",
                      "string"
                    ],
                    "title": "Elements are assumed to be ANDed together, unless this array has a key of 'or'"
                  }
                },
                "sparking": {
                  "$id": "#/items/properties/nodes/items/properties/sparking",
                  "type": "object",
                  "title": "Shinespark capabilities of this Room",
                  "properties": {
                    "runways": {
                      "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways",
                      "type": "array",
                      "title": "Runways",
                      "items": {
                        "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items",
                        "type": "object",
                        "title": "Runway Object",
                        "properties": {
                          "length": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/length",
                            "type": "integer",
                            "title": "Length of this Runway"
                          },
                          "gentleUpTiles": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/gentleUpTiles",
                            "type": "integer",
                            "title": "Number of tiles in the runway that gently slope (half a vertical tile) upwards (when running towards the door)"
                          },
                          "gentleDownTiles": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/gentleDownTiles",
                            "type": "integer",
                            "title": "Number of tiles in the runway that gently slope (half a vertical tile) downwards (when running towards the door)"
                          },
                          "steepUpTiles": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/steepUpTiles",
                            "type": "integer",
                            "title": "Number of tiles in the runway that steeply slope (one vertical tile) upwards (when running towards the door)"
                          },
                          "steepDownTiles": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/steepDownTiles",
                            "type": "integer",
                            "title": "Number of tiles in the runway that steeply slope (one vertical tile) downwards (when running towards the door)"
                          },
                          "startingDownTiles": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/startingDownTiles",
                            "type": "integer",
                            "title": "Number of tiles at the start of the runway (away from the door) that slope down, preventing a stutter"
                          },
                          "endingUpTiles": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/endingUpTiles",
                            "type": "integer",
                            "title": "Number of tiles at the end of the runway (at the door) that slope up, preventing a stutter when starting a run in the other direction"
                          },
                          "requires": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/requires",
                            "type": [
                              "array",
                              "null"
                            ]
                          },
                          "usableComingIn": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/usableComingIn",
                            "type": "boolean",
                            "title": "Is it usable coming in?",
                            "default": true
                          },
                          "openEnd": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/openEnd",
                            "type": "integer",
                            "title": "Does the runway have an open end beside it (as opposed to a wall)?",
                            "default": 1
                          },
                          "note": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/runways/items/properties/note",
                            "type": "string",
                            "title": "Runway Note field",
                            "default": "",
                            "examples": [ "This is a comment about a runway" ],
                            "pattern": "^(.*)$"
                          }
                        }
                      }
                    },
                    "canLeaveCharged": {
                      "$id": "#/items/properties/nodes/items/properties/sparking/properties/canLeaveCharged",
                      "type": "array",
                      "title": "canLeaveCharged",
                      "items": {
                        "$id": "#/items/properties/nodes/items/properties/sparking/properties/canLeaveCharged/items",
                        "type": "object",
                        "title": "canLeaveCharged Object",
                        "required": [
                          "framesRemaining",
                          "usedTiles",
                          "openEnd"
                        ],
                        "properties": {
                          "usedTiles": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/canLeaveCharged/properties/usedTiles",
                            "type": "integer",
                            "title": "Used Tiles",
                            "description": "The number of tiles that are available to charge a shinespark"
                          },
                          "framesRemaining": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/canLeaveCharged/properties/framesRemaining",
                            "type": "integer",
                            "title": "Frames Remaining",
                            "description": "The number of frames remaining in the shinespark charge when leaving the room. If this is 0, Samus leaves the room shinesparking."
                          },
                          "shinesparkFrames": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/canLeaveCharged/properties/shinesparkFrames",
                            "type": "integer",
                            "title": "Shinespark Frames",
                            "description": "If this requires shinespark out of the room, indicates how many frames that shinespark on the way out will last"
                          },
                          "initiateAt": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/canLeaveCharged/properties/initiateAt",
                            "type": "integer",
                            "title": "Node to initiate at",
                            "description": "The ID of the node where Samus must be to execute this canLeaveCharged"
                          },
                          "requires": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/canLeaveCharged/properties/requires",
                            "type": [
                              "array",
                              "null"
                            ],
                            "title": "Leave Charged Requirements",
                            "description": "Equipment, tech, and flag requirements (on top of those implied by charging/sparking needs) to be able to leave this node charged"
                          },
                          "openEnd": {
                            "$id": "#/items/properties/nodes/items/properties/sparking/properties/canLeaveCharged/properties/openEnd",
                            "type": "integer",
                            "title": "Number of Open Ends",
                            "description": "The number of open ends (between 0 and 2) that are present at the edges of the used tiles. Those add a little additional room."
                          }
                        }
                      }
                    }
                  }
                },
                "spawnAt": {
                  "$id": "#/items/properties/nodes/items/properties/spawnAt",
                  "type": "integer",
                  "title": "Node to spawn at",
                  "description": "ID of the node at which Samus spawns when entering a room through this node. If this is null, Samus just spawns at the node she entered through",
                  "default": null
                },
                "locks": {
                  "$id": "#/items/properties/nodes/items/properties/locks",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "Node Locks",
                  "description": "An array of corresponding lock and unlock conditions for this node",
                  "default": null,
                  "items": {
                    "$id": "#/items/properties/nodes/items/properties/locks/items",
                    "type": "object",
                    "title": "Lock Object",
                    "description": "Contains corresponding lock and unlock conditions for a node. If lock condition is missing, the lock is initially active.",
                    "required": [ "lockType", "unlock" ],
                    "properties": {
                      "lockType": {
                        "$id": "#/items/properties/nodes/items/properties/locks/items/properties/lockType",
                        "type": "string",
                        "title": "Lock Type",
                        "default": "",
                        "enum": [
                          "bossFight",
                          "coloredDoor",
                          "cutscene",
                          "escapeFunnel",
                          "gameFlag",
                          "killEnemies",
                          "permanent",
                          "triggeredEvent"
                        ],
                        "pattern": "^(.*)$"
                      },
                      "lock": {
                        "$id": "#/items/properties/nodes/items/properties/locks/items/properties/lock",
                        "type": [
                          "array",
                          "null"
                        ],
                        "title": "Lock Requirements",
                        "description": "Equipment, tech, and flag requirements for this node to be locked"
                      },
                      "unlock": {
                        "$id": "#/items/properties/nodes/items/properties/locks/items/properties/unlock",
                        "type": [
                          "array",
                          "null"
                        ],
                        "title": "Unlock Requirements",
                        "description": "Equipment, tech, and flag requirements to deactivate the associated lock"
                      },
                      "note": {
                        "$id": "#/items/properties/nodes/items/properties/locks/items/properties/note",
                        "type": "string",
                        "title": "Lock Note field",
                        "default": "",
                        "pattern": "^(.*)$"
                      }
                    }
                  }
                },
                "utility": {
                  "$id": "#/items/properties/nodes/items/properties/utility",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "Helping stations at this Node",
                  "items": {
                    "$id": "#/items/properties/nodes/items/properties/utility/items",
                    "type": [
                      "object",
                      "string"
                    ],
                    "title": "Elements are assumed to be ANDed together, unless this array has a key of 'or'"
                  }
                },
                "view": {
                  "$id": "#/items/properties/nodes/items/properties/view",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "View Requirements",
                  "description": "Equipment, tech, and flag requirements to view this node within Room",
                  "items": {
                    "$id": "#/items/properties/nodes/items/properties/view/items",
                    "type": [
                      "object",
                      "string"
                    ],
                    "title": "Elements are assumed to be ANDed together, unless this array has a key of 'or'"
                  }
                },
                "yields": {
                  "$id": "#/items/properties/nodes/items/properties/yields",
                  "type": "array",
                  "title": "This Node grants an ability/flag"
                },
                "note": {
                  "$id": "#/items/properties/nodes/items/properties/note",
                  "type": "string",
                  "title": "Node Note field",
                  "default": "",
                  "examples": [
                    "Door Object"
                  ],
                  "pattern": "^(.*)$"
                }
              }
            }
          },
          "links": {
            "$id": "#/items/properties/links",
            "type": "array",
            "title": "Links; pathways within the Room",
            "items": {
              "$id": "#/items/properties/links/items",
              "type": "object",
              "title": "Link",
              "required": [
                "from",
                "to"
              ],
              "properties": {
                "from": {
                  "$id": "#/items/properties/links/items/properties/from",
                  "type": "integer",
                  "title": "This Link originates at this Node ID within the Room",
                  "default": 0,
                  "examples": [
                    1
                  ]
                },
                "to": {
                  "$id": "#/items/properties/links/items/properties/to",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "This Link terminates at this Node ID within the Room",
                  "items": {
                    "$id": "#/items/properties/links/items/properties/to/items",
                    "type": "object",
                    "title": "The Items Schema",
                    "required": [
                      "id",
                      "requires",
                      "unlock"
                    ],
                    "properties": {
                      "id": {
                        "$id": "#/items/properties/links/items/properties/to/items/properties/id",
                        "type": "integer",
                        "title": "Target Node ID within the Room",
                        "default": 0,
                        "examples": [
                          2
                        ]
                      },
                      "requires": {
                        "$id": "#/items/properties/links/items/properties/to/items/properties/requires",
                        "type": [
                          "array",
                          "null"
                        ],
                        "title": "Link Requirements",
                        "description": "Equipment, tech, and flag requirements to traverse this Link",
                        "items": {
                          "$id": "#/items/properties/links/items/properties/to/items/properties/requires/items",
                          "type": [
                            "object",
                            "string"
                          ],
                          "title": "Elements are assumed to be ANDed together, unless this array has a key of 'or'"
                        }
                      },
                      "unlock": {
                        "$id": "#/items/properties/links/items/properties/to/items/properties/unlock",
                        "type": [
                          "array",
                          "null"
                        ],
                        "title": "Link Unlock Requirements",
                        "description": "Equipment, tech, and flag requirements to unlock this Link",
                        "default": null
                      },
                      "yields": {
                        "$id": "#/items/properties/links/items/properties/to/items/properties/yields",
                        "type": "array",
                        "title": "This Link grants an ability/flag"
                      },
                      "note": {
                        "$id": "#/items/properties/links/items/properties/to/items/properties/note",
                        "type": "string",
                        "title": "Note field",
                        "default": "",
                        "pattern": "^(.*)$"
                      }
                    }
                  }
                }
              }
            }
          },
          "obstacles": {
            "$id": "#/items/properties/obstacles",
            "type": "array",
            "title": "Obstacles; Things that block your way and can be destroyed, not respawning until the room is reset",
            "items": {
              "$id": "#/items/properties/obstacles/items",
              "type": "object",
              "title": "Obstacle",
              "required": [
                "id",
                "name",
                "obstacleType"
              ],
              "properties": {
                "id": {
                  "$id": "#/items/properties/obstacles/items/properties/id",
                  "type": "string",
                  "title": "Obstacle ID within Room. To reduce confusion with nodes, this should be a one-letter String",
                  "default": "",
                  "examples": [
                    "A"
                  ]
                },
                "name": {
                  "$id": "#/items/properties/obstacles/items/properties/name",
                  "type": "string",
                  "title": "Obstacle Name",
                  "default": "",
                  "examples": [
                    "Top Crumble Blocks"
                  ],
                  "pattern": "^(.*)$"
                },
                "obstacleType": {
                  "$id": "#/items/properties/obstacles/items/properties/obstacleType",
                  "type": "string",
                  "title": "Obstacle Type",
                  "description": "The main type of obstacle. Examples include 'inanimate' and 'enemies'",
                  "default": "",
                  "examples": [
                    "inanimate",
                    "enemies"
                  ],
                  "enum": [
                    "inanimate",
                    "enemies"
                  ],
                  "pattern": "^(.*)$"
                },
                "note": {
                  "$id": "#/items/properties/obstacles/items/properties/note",
                  "type": "string",
                  "title": "Note field",
                  "default": "",
                  "pattern": "^(.*)$"
                },
                "requires": {
                  "$id": "#/items/properties/obstacles/items/properties/requires",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "Absolute Obstacle Requireemts",
                  "description": "Equipment, tech, and flag requirements that are always needed to break this obstacle. Those are applied on top of any requirements specified on an `obstacle` logical element that references this obstacle.",
                  "items": {
                    "$id": "#/items/properties/obstacles/items/properties/requires/items",
                    "type": [
                      "object",
                      "string"
                    ],
                    "title": "Elements are assumed to be ANDed together, unless this array has a key of 'or'"
                  }
                }
              }
            }
          },
          "enemies": {
            "$id": "#/items/properties/enemies",
            "type": "array",
            "title": "Enemies; Things that try to kill you.",
            "items": {
              "$id": "#/items/properties/enemies/items",
              "type": "object",
              "title": "Enemies",
              "required": [
                "name",
                "quantity"
              ],
              "oneOf": [
                { "required":
                  [ "homeNodes" ]
                },
                { "required":
                  [ "betweenNodes" ]
                }
              ],
              "properties": {
                "name": {
                  "$id": "#/items/properties/enemies/items/properties/name",
                  "type": "string",
                  "title": "Enemy name",
                  "default": "",
                  "examples": [
                    "Kihunter (green)"
                  ]
                },
                "quantity": {
                  "$id": "#/items/properties/enemies/items/properties/quantity",
                  "type": "integer",
                  "title": "Quantity",
                  "default": "",
                  "examples": [
                    3
                  ]
                },
                "homeNodes": {
                  "$id": "#/items/properties/enemies/items/properties/homeNodes",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "title": "Home Nodes",
                  "description": "At what nodes enemies normaly engage you",
                  "default": [],
                  "examples": [
                    [1, 2]
                  ]
                },
                "betweenNodes": {
                  "$id": "#/items/properties/enemies/items/properties/betweenNodes",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "title": "Enemies between nodes",
                  "description": "Enemies can only be reached while traveling between these two nodes",
                  "default": [],
                  "minItems": 2,
                  "maxItems": 2,
                  "examples": [
                    [1, 2]
                  ]
                },
                "spawn": {
                  "$id": "#/items/properties/enemies/items/properties/spawn",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "Spawn Requirements",
                  "description": "Equipment, tech, and flag requirements for this enemy to spawn. If null, enemy can spawn from game start."
                },
                "stopSpawn": {
                  "$id": "#/items/properties/enemies/items/properties/stopSpawn",
                  "type": [
                    "array",
                    "null"
                  ],
                  "title": "Stop Spawning Requirements",
                  "description": "Equipment, tech, and flag requirements for this enemy to stop spawning. If null, enemy can always spawn once its spawn requirements have been met."
                },
                "dropRequires": {
                  "$id": "#/items/properties/enemies/items/properties/dropRequires",
                  "type": "array",
                  "title": "Drop Requires",
                  "description": "Equipment, tech, and flag requirements that are needed to obtain the drop from this enemy without taking any damage. These go on top of what's needed to reach and kill the enemy.",
                  "default": []
                },
                "note": {
                  "$id": "#/items/properties/enemies/items/properties/note",
                  "type": "string",
                  "title": "Note field",
                  "default": "",
                  "pattern": "^(.*)$"
                }
              }
            }
          }
        }
      }
    }
  }
}
